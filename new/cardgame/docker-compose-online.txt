version: '3.8'

services:
  # Game Server
  game-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    networks:
      - game-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Web-based client (optional - for future web UI)
  # web-client:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.web
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - REACT_APP_SERVER_URL=ws://localhost:8080/ws
  #   depends_on:
  #     - game-server
  #   networks:
  #     - game-network

  # Redis for future features (leaderboard, persistent games)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - game-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - game-server
    networks:
      - game-network
    profiles:
      - production

networks:
  game-network:
    driver: bridge

volumes:
  redis-data: